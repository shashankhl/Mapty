"use strict";const t=async function(t,e){try{let o=await fetch(t),s=await o.json();if(!o.ok)throw Error(e);return s}catch(t){throw t}},e=async function(e){try{let[o,s]=e.coords,r=await t(`https://geocode.xyz/${o},${s}?geoit=json`,"Please try to reload the page again. Unfortunately, this api what I am using now can not read all datas at once and I am not willing to pay for the API. Error occurs from this reason.");return r.osmtags.name}catch(t){return console.error(t),""}},o=async function(e){try{let[o,s]=e.coords,r=await t(`https://api.openweathermap.org/data/2.5/weather?lat=${o}&lon=${s}&appid=5c04291f0b2520cd23ea484f5b1e34e2`,"Failed to load data from API"),{icon:i}=r.weather[0];return`https://openweathermap.org/img/wn/${i}@2x.png`}catch(t){return console.error(t),""}},s=document.querySelector(".form"),r=document.querySelector(".workouts"),i=document.querySelector(".form__input--type"),a=document.querySelector(".form__input--distance"),n=document.querySelector(".form__input--duration"),c=document.querySelector(".form__input--cadence"),u=document.querySelector(".form__input--elevation"),l=document.querySelector(".sort__devider"),d=document.querySelector(".show__sort__btns"),_=document.querySelector(".validation__msg"),h=document.querySelector(".clr__all__btn"),p=document.querySelector(".overview__btn"),m=document.querySelector(".confirmation__msg"),w=document.querySelector(".yes__button"),k=document.querySelector(".no__button"),g=document.querySelector(".sort__buttons__container");class v{id=Math.random()+"";constructor(t,e,o,s){this.coords=t,this.distance=e,this.duration=o,this.date=s}_setDescription(){let t=new Date(this.date);this.description=`${this.type[0].toUpperCase()}${this.type.slice(1)} on ${["January","February","March","April","May","June","July","August","September","October","November","December"][t.getMonth()]}-${t.getDate()}-${t.getFullYear()%100}`}}class y extends v{type="running";constructor(t,e,o,s,r){super(t,e,o,s),this.cadence=r,this.calcPace(),this._setDescription()}calcPace(){return this.pace=this.duration/this.distance,this.pace}}class f extends v{type="cycling";constructor(t,e,o,s,r){super(t,e,o,s),this.elevationGain=r,this.calcSpeed(),this._setDescription()}calcSpeed(){this.speed=this.distance/(this.duration/60)}}new class{#t;#e;#o=[];#s=[];constructor(){this._getPosition(),s.addEventListener("submit",this._newWorkout.bind(this)),i.addEventListener("change",this._toggleElevationField),r.addEventListener("click",this._handleWorkoutClick.bind(this)),r.addEventListener("change",this._updateWorkoutInfo.bind(this)),this._checkStorageAndLoad(),d.addEventListener("click",this._toggleSortBtns.bind(this)),g.addEventListener("click",this._sortAndRender.bind(this)),h.addEventListener("click",this._showDeleteMsg),w.addEventListener("click",this._clearAll),k.addEventListener("click",function(){m.classList.add("msg__hidden")})}_handleWorkoutClick(t){let[e,o,s,r]=this._getId(t);if(e){if(t.target.classList.contains("remove__btn")){this._removeWorkout(r,s),this._saveWorkouts();return}t.target.classList.contains("workout__value")||this._setIntoView(o)}}_sortAndRender(t){let s=t.target.closest(".sort__button"),i="descending";if(!s)return;let a=s.querySelector(".arrow"),n=s.dataset.type;g.querySelectorAll(".arrow").forEach(t=>t.classList.remove("arrow__up"));let c=this.#o.map(t=>t[n]),u=c.slice().sort(function(t,e){return t-e}).join(""),l=c.slice().sort(function(t,e){return e-t}).join("");c.join("")===u&&(i="ascending",a.classList.add("arrow__up")),c.join("")===l&&(i="descending",a.classList.remove("arrow__up")),this._sortArray(this.#o,i,n),r.querySelectorAll(".workout").forEach(t=>t.remove()),this.#s.forEach(t=>t.remove()),this.#s=[],this.#o.forEach(t=>{this._renderWorkout(t,e(t),o(t)),this._renderWorkoutMarker(t)});let d=this.#o[this.#o.length-1];this._setIntoView(d)}_sortArray(t,e,o){"ascending"===e&&t.sort(function(t,e){return e[o]-t[o]}),"descending"===e&&t.sort(function(t,e){return t[o]-e[o]})}_toggleSortBtns(){g.classList.toggle("zero__height")}_showDeleteMsg(){m.classList.remove("msg__hidden")}_checkStorageAndLoad(){let t=localStorage.getItem("workouts");if(!t)return;let s=JSON.parse(t);s.forEach(t=>{let e;let o=t.type;"running"===o&&(e=new y(t.coords,t.distance,t.duration,t.date,t.cadence)),"cycling"===o&&(e=new f(t.coords,t.distance,t.duration,t.date,t.elevationGain)),this.#o.push(e)}),this.#o.forEach(t=>this._renderWorkout(t,e(t),o(t)))}_saveWorkouts(){let t=JSON.stringify(this.#o);window.localStorage.setItem("workouts",t)}_getPosition(){navigator.geolocation&&navigator.geolocation.getCurrentPosition(this._loadMap.bind(this),function(){alert("Could not get your position")})}_loadMap(t){let{latitude:e,longitude:o}=t.coords,s=[e,o];this.#t=L.map("map").setView(s,13),L.tileLayer("https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}).addTo(this.#t),this.#t.on("click",this._showForm.bind(this)),this.#o&&(this.#o.forEach(t=>this._renderWorkoutMarker(t)),p.addEventListener("click",this._overview.bind(this)))}_showForm(t){this.#e=t,s.classList.remove("hidden"),a.focus()}_clearInputFields(){a.value=n.value=c.value=u.value=""}_hideForm(){this._clearInputFields(),s.style.display="none",s.classList.add("hidden"),setTimeout(()=>{s.style.display="grid"},1e3)}_toggleElevationField(){u.closest(".form__row").classList.toggle("form__row--hidden"),c.closest(".form__row").classList.toggle("form__row--hidden")}_newWorkout(t){let s;let r=(...t)=>t.every(t=>Number.isFinite(t)),l=(...t)=>t.every(t=>t>0),d=(function(){_.classList.add("msg__show"),setTimeout(()=>{_.classList.remove("msg__show")},3e3),this._clearInputFields()}).bind(this);t.preventDefault();let h=i.value,p=+a.value,m=+n.value,{lat:w,lng:k}=this.#e.latlng,g=Date.now();if("running"===h){let t=+c.value;if(!r(p,m,t)||!l(p,m,t))return d();s=new y([w,k],p,m,g,t)}if("cycling"===h){let t=+u.value;if(!r(p,m,t)||!l(p,m))return d();s=new f([w,k],p,m,g,t)}this._renderWorkoutMarker(s),this.#o.push(s),this._renderWorkout(s,e(s),o(s)),this._hideForm()}_renderWorkoutMarker(t){let e=L.marker(t.coords).addTo(this.#t).bindPopup(L.popup({maxWidth:250,minWidth:100,autoClose:!1,closeOnClick:!1,className:`${t.type}-popup`})).setPopupContent(`${"running"===t.type?"\uD83C\uDFC3‚Äç‚ôÇÔ∏è":"\uD83D\uDEB4‚Äç‚ôÄÔ∏è"} ${t.description}`).openPopup();this.#s.push(e)}async _renderWorkout(t,e,o){let s=await e,r=await o,i=`
    <li class="workout workout--${t.type}" data-id="${t.id}">
    <h2 class="workout__title">${t.description}${s?",":""}
    ${s??""} <img class="workout__weather" src="${r}"/>
    </h2>
    <div class="workout__details">
          <span class="workout__icon">${"running"===t.type?"\uD83C\uDFC3‚Äç‚ôÇÔ∏è":"\uD83D\uDEB4‚Äç‚ôÄÔ∏è"}</span>
          <input class="workout__value" value="${t.distance}" data-type="distance" required size="1">
          <span class="workout__unit">km</span>
        </div>
        <div class="workout__details">
          <span class="workout__icon">‚è±</span>
          <input class="workout__value" value="${t.duration}" data-type="duration" required size="1">
          <span class="workout__unit">min</span>
        </div>`;"running"===t.type&&(i+=` 
          <div class="workout__details">
            <span class="workout__icon">‚ö°Ô∏è</span>
            <input class="workout__value" value="${t.pace.toFixed(1)}" data-type="pace" disabled required size="1">
            <span class="workout__unit">min/km</span>
          </div>
          <div class="workout__details">
            <span class="workout__icon">ü¶∂üèº</span>
            <input class="workout__value" value="${t.cadence}" data-type="cadence" required size="1">
            <span class="workout__unit">spm</span>
          </div>
          <button class="remove__btn">\xd7</button>
        </li>`),"cycling"===t.type&&(i+=`
            <div class="workout__details">
            <span class="workout__icon">‚ö°Ô∏è</span>
            <input class="workout__value" value="${t.speed.toFixed(1)}" data-type="speed" disabled required size="2">
            <span class="workout__unit">km/h</span>
          </div>
          <div class="workout__details">
            <span class="workout__icon">‚õ∞</span>
            <input class="workout__value" value="${t.elevationGain}" data-type="elevationGain" required size="2">
            <span class="workout__unit">m</span>
          </div>
          <button class="remove__btn">\xd7</button>
        </li>`),l.insertAdjacentHTML("afterend",i),this._saveWorkouts()}_removeWorkout(t,e){t.remove(),this.#o.splice(e,1),this.#s[e].remove(),this.#s.splice(e,1)}_clearAll(){localStorage.clear(),location.reload(),m.classList.add("msg__hidden")}_getId(t){let e=t.target.closest(".workout");if(e){let t=e.dataset.id,o=this.#o.find(e=>e.id===t),s=this.#o.indexOf(o);return[t,o,s,e]}return[]}_updateWorkoutInfo(t){let e;let[o,s,r,i]=this._getId(t);if(!o)return;let a=t.target.dataset.type,n=+t.target.value;s[a]=n,"running"===s.type&&(s.calcPace(),e="pace"),"cycling"===s.type&&(s.calcSpeed(),e="speed"),i.querySelector(`input[data-type ="${e}"`).value=s[e].toFixed(1),this._saveWorkouts()}_setIntoView(t){this.#t.setView(t.coords,13)}_overview(){if(0===this.#o.length)return;let t=this.#o.map(t=>t.coords[0]),e=this.#o.map(t=>t.coords[1]),o=Math.min(...t),s=Math.max(...t),r=Math.min(...e),i=Math.max(...e);this.#t.fitBounds([[s,r],[o,i]],{padding:[70,70]})}};
//# sourceMappingURL=index.18ad774a.js.map
